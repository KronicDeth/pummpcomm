defmodule Decocare.HistoryTest do
  use ExUnit.Case

  doctest Decocare.History



  test "CalBGForPH" do
    {:ok, history_page} = Base.decode16("0AD90183346D91")
    decoded_events = Decocare.History.decode_page(history_page, false)
    assert {:cal_bg_for_ph, %{amount: 473, timestamp: ~N[2017-02-13 20:03:01], raw: ^history_page}} = Enum.at(decoded_events, 0)

    {:ok, history_page} = Base.decode16("0AD90183B46D11")
    decoded_events = Decocare.History.decode_page(history_page, false)
    assert {:cal_bg_for_ph, %{amount: 729, timestamp: ~N[2017-02-13 20:03:01], raw: ^history_page}} = Enum.at(decoded_events, 0)

    {:ok, history_page} = Base.decode16("0AD90183346D11")
    decoded_events = Decocare.History.decode_page(history_page, false)
    assert {:cal_bg_for_ph, %{amount: 217, timestamp: ~N[2017-02-13 20:03:01], raw: ^history_page}} = Enum.at(decoded_events, 0)
  end

  test "AlarmSensor" do
    {:ok, history_page} = Base.decode16("0B6800008034AD11")
    decoded_events = Decocare.History.decode_page(history_page, false)
    assert {:alarm_sensor, %{alarm_type: "Meter BG Now", timestamp: ~N[2017-02-13 20:00:00], raw: ^history_page}} = Enum.at(decoded_events, 0)
  end

  test "BGReceived" do
    {:ok, history_page} = Base.decode16("3F1B0183346D11856250")
    decoded_events = Decocare.History.decode_page(history_page, false)
    assert {:bg_received, %{amount: 217, meter_link_id: "856250", timestamp: ~N[2017-02-13 20:03:01], raw: ^history_page}} = Enum.at(decoded_events, 0)

    {:ok, history_page} = Base.decode16("3F1B0183D46D11856250")
    decoded_events = Decocare.History.decode_page(history_page, false)
    assert {:bg_received, %{amount: 222, meter_link_id: "856250", timestamp: ~N[2017-02-13 20:03:01], raw: ^history_page}} = Enum.at(decoded_events, 0)
  end

  test "BolusWizard" do
    {:ok, history_page} = Base.decode16("5BD90685140D11005006234B2400000007001D5A")
    decoded_events = Decocare.History.decode_page(history_page, false)
    expected_event_info = %{
      bg: 217,
      bg_target_high: 90,
      bg_target_low: 75,
      bolus_estimate: 2.9,
      carbohydrates: 0,
      carb_ratio: 6,
      correction_estimate: 3.6,
      food_estimate: 0.0,
      insulin_sensitivity: 35,
      unabsorbed_insulin_total: 0.7,
      raw: history_page,
      timestamp: ~N[2017-02-13 20:05:06]
    }
    assert {:bolus_wizard_estimate, ^expected_event_info} = Enum.at(decoded_events, 0)
  end
end
